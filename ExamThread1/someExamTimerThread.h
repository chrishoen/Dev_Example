#pragma once

/*==============================================================================
Example timer thread.
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************
#include "risThreadsTimerThread.h"

namespace Some
{
//******************************************************************************
//******************************************************************************
//******************************************************************************
// This is an example timer thread. It inherits from the timer thread base
// class. It executes a function periodically.

class ExamTimerThread : public Ris::Threads::BaseTimerThread
{
public:
   typedef Ris::Threads::BaseTimerThread BaseClass;

   //******************************************************************************
   //******************************************************************************
   //******************************************************************************
   // Members.

   //******************************************************************************
   //******************************************************************************
   //******************************************************************************
   // Methods.

   // Constructor.
   ExamTimerThread();

   // Base class overloads. This is executed periodically, in the context
   // of the thread.
   void executeOnTimer(int aTimeCount) override;
};

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Global instance.

#ifdef _SOMEXAMTIMERTHREAD_CPP_
           ExamTimerThread* gExamTimerThread;
#else
   extern  ExamTimerThread* gExamTimerThread;
#endif

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace


